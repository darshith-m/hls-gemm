// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module gemm_kernel_gemm_kernel_Pipeline_LOAD_B_VITIS_LOOP_32_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY,
        m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY,
        m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST,
        m_axi_gmem1_0_RID,
        m_axi_gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER,
        m_axi_gmem1_0_RRESP,
        m_axi_gmem1_0_BVALID,
        m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP,
        m_axi_gmem1_0_BID,
        m_axi_gmem1_0_BUSER,
        B_block_address0,
        B_block_ce0,
        B_block_we0,
        B_block_d0,
        B_block_1_address0,
        B_block_1_ce0,
        B_block_1_we0,
        B_block_1_d0,
        B_block_2_address0,
        B_block_2_ce0,
        B_block_2_we0,
        B_block_2_d0,
        B_block_3_address0,
        B_block_3_ce0,
        B_block_3_we0,
        B_block_3_d0,
        B_block_4_address0,
        B_block_4_ce0,
        B_block_4_we0,
        B_block_4_d0,
        B_block_5_address0,
        B_block_5_ce0,
        B_block_5_we0,
        B_block_5_d0,
        B_block_6_address0,
        B_block_6_ce0,
        B_block_6_we0,
        B_block_6_d0,
        B_block_7_address0,
        B_block_7_ce0,
        B_block_7_we0,
        B_block_7_d0,
        B_block_8_address0,
        B_block_8_ce0,
        B_block_8_we0,
        B_block_8_d0,
        B_block_9_address0,
        B_block_9_ce0,
        B_block_9_we0,
        B_block_9_d0,
        B_block_10_address0,
        B_block_10_ce0,
        B_block_10_we0,
        B_block_10_d0,
        B_block_11_address0,
        B_block_11_ce0,
        B_block_11_we0,
        B_block_11_d0,
        B_block_12_address0,
        B_block_12_ce0,
        B_block_12_we0,
        B_block_12_d0,
        B_block_13_address0,
        B_block_13_ce0,
        B_block_13_we0,
        B_block_13_d0,
        B_block_14_address0,
        B_block_14_ce0,
        B_block_14_we0,
        B_block_14_d0,
        B_block_15_address0,
        B_block_15_ce0,
        B_block_15_we0,
        B_block_15_d0,
        B,
        zext_ln31
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_0_AWVALID;
input   m_axi_gmem1_0_AWREADY;
output  [63:0] m_axi_gmem1_0_AWADDR;
output  [0:0] m_axi_gmem1_0_AWID;
output  [31:0] m_axi_gmem1_0_AWLEN;
output  [2:0] m_axi_gmem1_0_AWSIZE;
output  [1:0] m_axi_gmem1_0_AWBURST;
output  [1:0] m_axi_gmem1_0_AWLOCK;
output  [3:0] m_axi_gmem1_0_AWCACHE;
output  [2:0] m_axi_gmem1_0_AWPROT;
output  [3:0] m_axi_gmem1_0_AWQOS;
output  [3:0] m_axi_gmem1_0_AWREGION;
output  [0:0] m_axi_gmem1_0_AWUSER;
output   m_axi_gmem1_0_WVALID;
input   m_axi_gmem1_0_WREADY;
output  [31:0] m_axi_gmem1_0_WDATA;
output  [3:0] m_axi_gmem1_0_WSTRB;
output   m_axi_gmem1_0_WLAST;
output  [0:0] m_axi_gmem1_0_WID;
output  [0:0] m_axi_gmem1_0_WUSER;
output   m_axi_gmem1_0_ARVALID;
input   m_axi_gmem1_0_ARREADY;
output  [63:0] m_axi_gmem1_0_ARADDR;
output  [0:0] m_axi_gmem1_0_ARID;
output  [31:0] m_axi_gmem1_0_ARLEN;
output  [2:0] m_axi_gmem1_0_ARSIZE;
output  [1:0] m_axi_gmem1_0_ARBURST;
output  [1:0] m_axi_gmem1_0_ARLOCK;
output  [3:0] m_axi_gmem1_0_ARCACHE;
output  [2:0] m_axi_gmem1_0_ARPROT;
output  [3:0] m_axi_gmem1_0_ARQOS;
output  [3:0] m_axi_gmem1_0_ARREGION;
output  [0:0] m_axi_gmem1_0_ARUSER;
input   m_axi_gmem1_0_RVALID;
output   m_axi_gmem1_0_RREADY;
input  [31:0] m_axi_gmem1_0_RDATA;
input   m_axi_gmem1_0_RLAST;
input  [0:0] m_axi_gmem1_0_RID;
input  [8:0] m_axi_gmem1_0_RFIFONUM;
input  [0:0] m_axi_gmem1_0_RUSER;
input  [1:0] m_axi_gmem1_0_RRESP;
input   m_axi_gmem1_0_BVALID;
output   m_axi_gmem1_0_BREADY;
input  [1:0] m_axi_gmem1_0_BRESP;
input  [0:0] m_axi_gmem1_0_BID;
input  [0:0] m_axi_gmem1_0_BUSER;
output  [6:0] B_block_address0;
output   B_block_ce0;
output   B_block_we0;
output  [31:0] B_block_d0;
output  [6:0] B_block_1_address0;
output   B_block_1_ce0;
output   B_block_1_we0;
output  [31:0] B_block_1_d0;
output  [6:0] B_block_2_address0;
output   B_block_2_ce0;
output   B_block_2_we0;
output  [31:0] B_block_2_d0;
output  [6:0] B_block_3_address0;
output   B_block_3_ce0;
output   B_block_3_we0;
output  [31:0] B_block_3_d0;
output  [6:0] B_block_4_address0;
output   B_block_4_ce0;
output   B_block_4_we0;
output  [31:0] B_block_4_d0;
output  [6:0] B_block_5_address0;
output   B_block_5_ce0;
output   B_block_5_we0;
output  [31:0] B_block_5_d0;
output  [6:0] B_block_6_address0;
output   B_block_6_ce0;
output   B_block_6_we0;
output  [31:0] B_block_6_d0;
output  [6:0] B_block_7_address0;
output   B_block_7_ce0;
output   B_block_7_we0;
output  [31:0] B_block_7_d0;
output  [6:0] B_block_8_address0;
output   B_block_8_ce0;
output   B_block_8_we0;
output  [31:0] B_block_8_d0;
output  [6:0] B_block_9_address0;
output   B_block_9_ce0;
output   B_block_9_we0;
output  [31:0] B_block_9_d0;
output  [6:0] B_block_10_address0;
output   B_block_10_ce0;
output   B_block_10_we0;
output  [31:0] B_block_10_d0;
output  [6:0] B_block_11_address0;
output   B_block_11_ce0;
output   B_block_11_we0;
output  [31:0] B_block_11_d0;
output  [6:0] B_block_12_address0;
output   B_block_12_ce0;
output   B_block_12_we0;
output  [31:0] B_block_12_d0;
output  [6:0] B_block_13_address0;
output   B_block_13_ce0;
output   B_block_13_we0;
output  [31:0] B_block_13_d0;
output  [6:0] B_block_14_address0;
output   B_block_14_ce0;
output   B_block_14_we0;
output  [31:0] B_block_14_d0;
output  [6:0] B_block_15_address0;
output   B_block_15_ce0;
output   B_block_15_we0;
output  [31:0] B_block_15_d0;
input  [63:0] B;
input  [8:0] zext_ln31;

reg ap_idle;
reg m_axi_gmem1_0_ARVALID;
reg m_axi_gmem1_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
reg   [0:0] first_iter_0_reg_620;
reg   [0:0] first_iter_0_reg_620_pp0_iter2_reg;
reg    ap_block_state4_io_grp1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln31_fu_412_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_R;
wire    ap_block_pp0_stage0_grp1;
reg    gmem1_blk_n_AR;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [63:0] zext_ln31_cast_fu_390_p1;
reg   [63:0] zext_ln31_cast_reg_611;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] first_iter_0_fu_463_p2;
wire   [6:0] trunc_ln31_fu_469_p1;
reg   [6:0] trunc_ln31_reg_624;
wire   [3:0] trunc_ln31_1_fu_473_p1;
reg   [3:0] trunc_ln31_1_reg_629;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter2_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter3_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter4_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter5_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter6_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter7_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter8_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter9_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter10_reg;
reg   [3:0] trunc_ln31_1_reg_629_pp0_iter11_reg;
wire   [6:0] add_ln34_fu_499_p2;
reg   [6:0] add_ln34_reg_633;
reg   [6:0] add_ln34_reg_633_pp0_iter2_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter3_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter4_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter5_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter6_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter7_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter8_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter9_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter10_reg;
reg   [6:0] add_ln34_reg_633_pp0_iter11_reg;
reg   [63:0] gmem1_addr_reg_638;
wire   [31:0] bitcast_ln34_fu_562_p1;
reg   [31:0] bitcast_ln34_reg_644;
wire   [63:0] zext_ln34_1_fu_566_p1;
wire    ap_block_pp0_stage0_grp0;
wire  signed [63:0] sext_ln32_fu_552_p1;
reg   [4:0] j_fu_146;
wire   [4:0] add_ln32_fu_505_p2;
wire    ap_loop_init;
reg   [7:0] i_fu_150;
wire   [7:0] select_ln31_1_fu_455_p3;
reg   [11:0] indvar_flatten_fu_154;
wire   [11:0] add_ln31_3_fu_418_p2;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0;
reg    B_block_14_we0_local;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    B_block_14_ce0_local;
reg    B_block_13_we0_local;
reg    B_block_13_ce0_local;
reg    B_block_12_we0_local;
reg    B_block_12_ce0_local;
reg    B_block_11_we0_local;
reg    B_block_11_ce0_local;
reg    B_block_10_we0_local;
reg    B_block_10_ce0_local;
reg    B_block_9_we0_local;
reg    B_block_9_ce0_local;
reg    B_block_8_we0_local;
reg    B_block_8_ce0_local;
reg    B_block_7_we0_local;
reg    B_block_7_ce0_local;
reg    B_block_6_we0_local;
reg    B_block_6_ce0_local;
reg    B_block_5_we0_local;
reg    B_block_5_ce0_local;
reg    B_block_4_we0_local;
reg    B_block_4_ce0_local;
reg    B_block_3_we0_local;
reg    B_block_3_ce0_local;
reg    B_block_2_we0_local;
reg    B_block_2_ce0_local;
reg    B_block_1_we0_local;
reg    B_block_1_ce0_local;
reg    B_block_we0_local;
reg    B_block_ce0_local;
reg    B_block_15_we0_local;
reg    B_block_15_ce0_local;
wire   [0:0] icmp_ln32_fu_441_p2;
wire   [7:0] add_ln31_2_fu_435_p2;
wire   [4:0] select_ln31_fu_447_p3;
wire   [2:0] lshr_ln_fu_477_p4;
wire   [6:0] tmp_3_fu_487_p3;
wire   [6:0] zext_ln34_fu_495_p1;
wire   [15:0] shl_ln_fu_521_p3;
wire   [63:0] zext_ln31_1_fu_528_p1;
wire   [63:0] add_ln31_fu_532_p2;
wire   [63:0] add_ln31_1_fu_537_p2;
wire   [61:0] trunc_ln_fu_542_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 j_fu_146 = 5'd0;
#0 i_fu_150 = 8'd0;
#0 indvar_flatten_fu_154 = 12'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

gemm_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_150 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i_fu_150 <= select_ln31_1_fu_455_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln31_fu_412_p2 == 1'd0))) begin
            indvar_flatten_fu_154 <= add_ln31_3_fu_418_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_154 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_146 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_146 <= add_ln32_fu_505_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        add_ln34_reg_633 <= add_ln34_fu_499_p2;
        first_iter_0_reg_620 <= first_iter_0_fu_463_p2;
        trunc_ln31_1_reg_629 <= trunc_ln31_1_fu_473_p1;
        trunc_ln31_reg_624 <= trunc_ln31_fu_469_p1;
        zext_ln31_cast_reg_611[8 : 0] <= zext_ln31_cast_fu_390_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        add_ln34_reg_633_pp0_iter10_reg <= add_ln34_reg_633_pp0_iter9_reg;
        add_ln34_reg_633_pp0_iter11_reg <= add_ln34_reg_633_pp0_iter10_reg;
        add_ln34_reg_633_pp0_iter2_reg <= add_ln34_reg_633;
        add_ln34_reg_633_pp0_iter3_reg <= add_ln34_reg_633_pp0_iter2_reg;
        add_ln34_reg_633_pp0_iter4_reg <= add_ln34_reg_633_pp0_iter3_reg;
        add_ln34_reg_633_pp0_iter5_reg <= add_ln34_reg_633_pp0_iter4_reg;
        add_ln34_reg_633_pp0_iter6_reg <= add_ln34_reg_633_pp0_iter5_reg;
        add_ln34_reg_633_pp0_iter7_reg <= add_ln34_reg_633_pp0_iter6_reg;
        add_ln34_reg_633_pp0_iter8_reg <= add_ln34_reg_633_pp0_iter7_reg;
        add_ln34_reg_633_pp0_iter9_reg <= add_ln34_reg_633_pp0_iter8_reg;
        bitcast_ln34_reg_644 <= bitcast_ln34_fu_562_p1;
        first_iter_0_reg_620_pp0_iter2_reg <= first_iter_0_reg_620;
        gmem1_addr_reg_638 <= sext_ln32_fu_552_p1;
        trunc_ln31_1_reg_629_pp0_iter10_reg <= trunc_ln31_1_reg_629_pp0_iter9_reg;
        trunc_ln31_1_reg_629_pp0_iter11_reg <= trunc_ln31_1_reg_629_pp0_iter10_reg;
        trunc_ln31_1_reg_629_pp0_iter2_reg <= trunc_ln31_1_reg_629;
        trunc_ln31_1_reg_629_pp0_iter3_reg <= trunc_ln31_1_reg_629_pp0_iter2_reg;
        trunc_ln31_1_reg_629_pp0_iter4_reg <= trunc_ln31_1_reg_629_pp0_iter3_reg;
        trunc_ln31_1_reg_629_pp0_iter5_reg <= trunc_ln31_1_reg_629_pp0_iter4_reg;
        trunc_ln31_1_reg_629_pp0_iter6_reg <= trunc_ln31_1_reg_629_pp0_iter5_reg;
        trunc_ln31_1_reg_629_pp0_iter7_reg <= trunc_ln31_1_reg_629_pp0_iter6_reg;
        trunc_ln31_1_reg_629_pp0_iter8_reg <= trunc_ln31_1_reg_629_pp0_iter7_reg;
        trunc_ln31_1_reg_629_pp0_iter9_reg <= trunc_ln31_1_reg_629_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_10_ce0_local = 1'b1;
    end else begin
        B_block_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_10_we0_local = 1'b1;
    end else begin
        B_block_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_11_ce0_local = 1'b1;
    end else begin
        B_block_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_11_we0_local = 1'b1;
    end else begin
        B_block_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_12_ce0_local = 1'b1;
    end else begin
        B_block_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_12_we0_local = 1'b1;
    end else begin
        B_block_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_13_ce0_local = 1'b1;
    end else begin
        B_block_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_13_we0_local = 1'b1;
    end else begin
        B_block_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_14_ce0_local = 1'b1;
    end else begin
        B_block_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_14_we0_local = 1'b1;
    end else begin
        B_block_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_15_ce0_local = 1'b1;
    end else begin
        B_block_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_15_we0_local = 1'b1;
    end else begin
        B_block_15_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_1_ce0_local = 1'b1;
    end else begin
        B_block_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_1_we0_local = 1'b1;
    end else begin
        B_block_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_2_ce0_local = 1'b1;
    end else begin
        B_block_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_2_we0_local = 1'b1;
    end else begin
        B_block_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_3_ce0_local = 1'b1;
    end else begin
        B_block_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_3_we0_local = 1'b1;
    end else begin
        B_block_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_4_ce0_local = 1'b1;
    end else begin
        B_block_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_4_we0_local = 1'b1;
    end else begin
        B_block_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_5_ce0_local = 1'b1;
    end else begin
        B_block_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_5_we0_local = 1'b1;
    end else begin
        B_block_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_6_ce0_local = 1'b1;
    end else begin
        B_block_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_6_we0_local = 1'b1;
    end else begin
        B_block_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_7_ce0_local = 1'b1;
    end else begin
        B_block_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_7_we0_local = 1'b1;
    end else begin
        B_block_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_8_ce0_local = 1'b1;
    end else begin
        B_block_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_8_we0_local = 1'b1;
    end else begin
        B_block_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_9_ce0_local = 1'b1;
    end else begin
        B_block_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_9_we0_local = 1'b1;
    end else begin
        B_block_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_ce0_local = 1'b1;
    end else begin
        B_block_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (trunc_ln31_1_reg_629_pp0_iter11_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        B_block_we0_local = 1'b1;
    end else begin
        B_block_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_fu_412_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_154;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_grp1) & (first_iter_0_reg_620_pp0_iter2_reg == 1'd1))) begin
        gmem1_blk_n_AR = m_axi_gmem1_0_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_grp1))) begin
        gmem1_blk_n_R = m_axi_gmem1_0_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (first_iter_0_reg_620_pp0_iter2_reg == 1'd1))) begin
        m_axi_gmem1_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem1_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        m_axi_gmem1_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_block_10_address0 = zext_ln34_1_fu_566_p1;

assign B_block_10_ce0 = B_block_10_ce0_local;

assign B_block_10_d0 = bitcast_ln34_reg_644;

assign B_block_10_we0 = B_block_10_we0_local;

assign B_block_11_address0 = zext_ln34_1_fu_566_p1;

assign B_block_11_ce0 = B_block_11_ce0_local;

assign B_block_11_d0 = bitcast_ln34_reg_644;

assign B_block_11_we0 = B_block_11_we0_local;

assign B_block_12_address0 = zext_ln34_1_fu_566_p1;

assign B_block_12_ce0 = B_block_12_ce0_local;

assign B_block_12_d0 = bitcast_ln34_reg_644;

assign B_block_12_we0 = B_block_12_we0_local;

assign B_block_13_address0 = zext_ln34_1_fu_566_p1;

assign B_block_13_ce0 = B_block_13_ce0_local;

assign B_block_13_d0 = bitcast_ln34_reg_644;

assign B_block_13_we0 = B_block_13_we0_local;

assign B_block_14_address0 = zext_ln34_1_fu_566_p1;

assign B_block_14_ce0 = B_block_14_ce0_local;

assign B_block_14_d0 = bitcast_ln34_reg_644;

assign B_block_14_we0 = B_block_14_we0_local;

assign B_block_15_address0 = zext_ln34_1_fu_566_p1;

assign B_block_15_ce0 = B_block_15_ce0_local;

assign B_block_15_d0 = bitcast_ln34_reg_644;

assign B_block_15_we0 = B_block_15_we0_local;

assign B_block_1_address0 = zext_ln34_1_fu_566_p1;

assign B_block_1_ce0 = B_block_1_ce0_local;

assign B_block_1_d0 = bitcast_ln34_reg_644;

assign B_block_1_we0 = B_block_1_we0_local;

assign B_block_2_address0 = zext_ln34_1_fu_566_p1;

assign B_block_2_ce0 = B_block_2_ce0_local;

assign B_block_2_d0 = bitcast_ln34_reg_644;

assign B_block_2_we0 = B_block_2_we0_local;

assign B_block_3_address0 = zext_ln34_1_fu_566_p1;

assign B_block_3_ce0 = B_block_3_ce0_local;

assign B_block_3_d0 = bitcast_ln34_reg_644;

assign B_block_3_we0 = B_block_3_we0_local;

assign B_block_4_address0 = zext_ln34_1_fu_566_p1;

assign B_block_4_ce0 = B_block_4_ce0_local;

assign B_block_4_d0 = bitcast_ln34_reg_644;

assign B_block_4_we0 = B_block_4_we0_local;

assign B_block_5_address0 = zext_ln34_1_fu_566_p1;

assign B_block_5_ce0 = B_block_5_ce0_local;

assign B_block_5_d0 = bitcast_ln34_reg_644;

assign B_block_5_we0 = B_block_5_we0_local;

assign B_block_6_address0 = zext_ln34_1_fu_566_p1;

assign B_block_6_ce0 = B_block_6_ce0_local;

assign B_block_6_d0 = bitcast_ln34_reg_644;

assign B_block_6_we0 = B_block_6_we0_local;

assign B_block_7_address0 = zext_ln34_1_fu_566_p1;

assign B_block_7_ce0 = B_block_7_ce0_local;

assign B_block_7_d0 = bitcast_ln34_reg_644;

assign B_block_7_we0 = B_block_7_we0_local;

assign B_block_8_address0 = zext_ln34_1_fu_566_p1;

assign B_block_8_ce0 = B_block_8_ce0_local;

assign B_block_8_d0 = bitcast_ln34_reg_644;

assign B_block_8_we0 = B_block_8_we0_local;

assign B_block_9_address0 = zext_ln34_1_fu_566_p1;

assign B_block_9_ce0 = B_block_9_ce0_local;

assign B_block_9_d0 = bitcast_ln34_reg_644;

assign B_block_9_we0 = B_block_9_we0_local;

assign B_block_address0 = zext_ln34_1_fu_566_p1;

assign B_block_ce0 = B_block_ce0_local;

assign B_block_d0 = bitcast_ln34_reg_644;

assign B_block_we0 = B_block_we0_local;

assign add_ln31_1_fu_537_p2 = (add_ln31_fu_532_p2 + zext_ln31_cast_reg_611);

assign add_ln31_2_fu_435_p2 = (i_fu_150 + 8'd1);

assign add_ln31_3_fu_418_p2 = (ap_sig_allocacmp_indvar_flatten_load + 12'd1);

assign add_ln31_fu_532_p2 = (zext_ln31_1_fu_528_p1 + B);

assign add_ln32_fu_505_p2 = (select_ln31_fu_447_p3 + 5'd1);

assign add_ln34_fu_499_p2 = (tmp_3_fu_487_p3 + zext_ln34_fu_495_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_gmem1_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_gmem1_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_gmem1_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io_grp1 = ((m_axi_gmem1_0_ARREADY == 1'b0) & (first_iter_0_reg_620_pp0_iter2_reg == 1'd1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln34_fu_562_p1 = m_axi_gmem1_0_RDATA;

assign first_iter_0_fu_463_p2 = ((select_ln31_fu_447_p3 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_412_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 12'd2048) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_441_p2 = ((j_fu_146 == 5'd16) ? 1'b1 : 1'b0);

assign lshr_ln_fu_477_p4 = {{select_ln31_1_fu_455_p3[6:4]}};

assign m_axi_gmem1_0_ARADDR = gmem1_addr_reg_638;

assign m_axi_gmem1_0_ARBURST = 2'd0;

assign m_axi_gmem1_0_ARCACHE = 4'd0;

assign m_axi_gmem1_0_ARID = 1'd0;

assign m_axi_gmem1_0_ARLEN = 64'd16;

assign m_axi_gmem1_0_ARLOCK = 2'd0;

assign m_axi_gmem1_0_ARPROT = 3'd0;

assign m_axi_gmem1_0_ARQOS = 4'd0;

assign m_axi_gmem1_0_ARREGION = 4'd0;

assign m_axi_gmem1_0_ARSIZE = 3'd0;

assign m_axi_gmem1_0_ARUSER = 1'd0;

assign m_axi_gmem1_0_AWADDR = 64'd0;

assign m_axi_gmem1_0_AWBURST = 2'd0;

assign m_axi_gmem1_0_AWCACHE = 4'd0;

assign m_axi_gmem1_0_AWID = 1'd0;

assign m_axi_gmem1_0_AWLEN = 32'd0;

assign m_axi_gmem1_0_AWLOCK = 2'd0;

assign m_axi_gmem1_0_AWPROT = 3'd0;

assign m_axi_gmem1_0_AWQOS = 4'd0;

assign m_axi_gmem1_0_AWREGION = 4'd0;

assign m_axi_gmem1_0_AWSIZE = 3'd0;

assign m_axi_gmem1_0_AWUSER = 1'd0;

assign m_axi_gmem1_0_AWVALID = 1'b0;

assign m_axi_gmem1_0_BREADY = 1'b0;

assign m_axi_gmem1_0_WDATA = 32'd0;

assign m_axi_gmem1_0_WID = 1'd0;

assign m_axi_gmem1_0_WLAST = 1'b0;

assign m_axi_gmem1_0_WSTRB = 4'd0;

assign m_axi_gmem1_0_WUSER = 1'd0;

assign m_axi_gmem1_0_WVALID = 1'b0;

assign select_ln31_1_fu_455_p3 = ((icmp_ln32_fu_441_p2[0:0] == 1'b1) ? add_ln31_2_fu_435_p2 : i_fu_150);

assign select_ln31_fu_447_p3 = ((icmp_ln32_fu_441_p2[0:0] == 1'b1) ? 5'd0 : j_fu_146);

assign sext_ln32_fu_552_p1 = $signed(trunc_ln_fu_542_p4);

assign shl_ln_fu_521_p3 = {{trunc_ln31_reg_624}, {9'd0}};

assign tmp_3_fu_487_p3 = {{lshr_ln_fu_477_p4}, {4'd0}};

assign trunc_ln31_1_fu_473_p1 = select_ln31_1_fu_455_p3[3:0];

assign trunc_ln31_fu_469_p1 = select_ln31_1_fu_455_p3[6:0];

assign trunc_ln_fu_542_p4 = {{add_ln31_1_fu_537_p2[63:2]}};

assign zext_ln31_1_fu_528_p1 = shl_ln_fu_521_p3;

assign zext_ln31_cast_fu_390_p1 = zext_ln31;

assign zext_ln34_1_fu_566_p1 = add_ln34_reg_633_pp0_iter11_reg;

assign zext_ln34_fu_495_p1 = select_ln31_fu_447_p3;

always @ (posedge ap_clk) begin
    zext_ln31_cast_reg_611[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //gemm_kernel_gemm_kernel_Pipeline_LOAD_B_VITIS_LOOP_32_1
